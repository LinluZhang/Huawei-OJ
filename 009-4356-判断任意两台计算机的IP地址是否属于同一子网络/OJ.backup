#include <stdlib.h>
#include <string.h>
#include "OJ.h"



/*
功能: 判断两台计算机IP地址是同一子网络。
原型：
    int IsSameSubNetwork(char * pcIp1, char * pcIp2, char * pcSubNetworkMask);

输入参数：
    char * pcIP1: 计算机1的IP地址，格式：“192.168.0.254”；
    char * pcIP2: 计算机2的IP地址，格式：“192.168.0.1”；
    char * pcSubNetworkMask: 子网掩码，格式：“255.255.255.0”；

返回值：
    0：IP1与IP2不属于同一子网络；
    1：IP1与IP2属于同一子网络；
*/

int * IpStringToIpInt(char * pIp) {
    int *rs = (int *)malloc(4*sizeof(int));

    char * p = pIp;
    int cnt = 0;

    while(*p != '\0') {

        if(*p != '0' && *p != '.') {
            int digit = 0;

            while(*p != '\0' && *p != '.') {
                digit = digit * 10 + (*p - '0');
                p++;
            }
            // cout << digit << endl;

            rs[cnt] = digit;
            cnt++;
        } else {
            p++;
        }
    }

    return rs;
}

// 有错误末通过全部测试用例
int IsSameSubNetwork2(char * pcIp1, char * pcIp2, char * pcSubNetworkMask) {

    int * ip1 = IpStringToIpInt(pcIp1);
    int * ip2 = IpStringToIpInt(pcIp2);
    int * mask = IpStringToIpInt(pcSubNetworkMask);

    for(int i = 0; i < 4; i++) {
        if((pcIp1[i]&pcSubNetworkMask[i]) != (pcIp2[i]&pcSubNetworkMask[i])) {
            return 0;
        }
    }

    free(ip1);
    free(ip2);
    free(mask);

    return 1;
}
